Project plan (coding conventions - http://www.python.org/dev/peps/pep-0008/)

0 Initial work on audio_intake.py : APR 5-12 WEEK                             OK v0.2

 * read text file to extract wav tags - this means work wavs with ffmpeg      OK
 * work with aif                                                              OK
 * extract all tags from all taggy formats (replace eyeD3 w/ TagPy)          ... see 2.1 as well

1 Immediate future : projected APR 23                                         OK v0.3

 * support multiple collections with the same audio files                     OK

2 Late spring : MAY-JUNE                                                      OK v0.4

 * implement _annotation_ file association to tracks                          OK
   annotation types: (add track_annotation table)
  0 DB structure (create annotation table)                                    OK
  1 all (metadata) tags * normalize with annotation_type table?	             ... see 0 3rd *
  2 time-values (eg HTK .lab) files *check psql variable length coltypes      OK
  2.2 function to add arbitrary text files as annotations                     OK
  3 inter-relationships (eg covers) - create add_to_collection(tracks)        OK
  + add track.get_annotation('name')                                          OK
  + support Annotations for Albums or Artists                                ...
  + kill Annotations.type
  * improve tracklist format (see bitbucket issue #11)                       ...
  + think about MIDI (binary) annotations

3 Summer I : JUNE-JULY                                                        OK v0.5

 * implement/clean-up _feature_ extraction                                   ...
 + add fe.describe()                                                          OK
 + auto extract fname from fdefcode                                          ???
 + cache features (use pytables & a h5 files for all cached features per FE) ...
 + restructure project code?                                                 ... v1.x
 ? test features with mlabwrap.mlab (apy25) on Win
 
Future (by SEPT ?)                                                          ...

 * integrate with Ho-Hsiang Flash app (see http://blog.pettomato.com/?p=9)   ???
 * full Gordon 1.0 manual                                                    ???
 + get PyGreSQL (4 musbrainz), TurboGears (4 webapp)                         ...
 + get TagPy (4 tracklists) - compile Taglib? and Boost.Python (win);        ???
   ? get frontend working - compile libsamplerate (SRS) and libsndfile
   ? compile mlabwrap (1.1+) 4 py26 (http://obasic.net/how-to-install-mlabwrap-on-windows)
 + Dive into webapp                                                          ...
   - add full Collections support to webapp?                                 
   - add Annotation support to webapp                                        
   - add FeatureExtractor support to webapp                                  



Version 2 ?
 
 * support auto-make of non-python libraries (4 features)
 
 